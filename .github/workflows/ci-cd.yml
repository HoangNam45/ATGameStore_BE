name: CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  REGISTRY: docker.io
  IMAGE_NAME: nhnam/shopacc-backend

jobs:
  # Job 1: Build and Test
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

  # Job 2: Build and Push Docker Image
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    environment: DOCKERHUB
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.build.outputs.digest }}

  # Job 3: Deploy to VPS
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: PRODUCTION
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            # Navigate to application directory
            cd /opt/shopacc-backend || { echo "App directory not found"; exit 1; }

            # Pull latest code (optional, if you want to update docker-compose files)
            git pull origin main || git pull origin master

            # Login to DockerHub
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            # Pull latest image
            docker pull ${{ env.IMAGE_NAME }}:latest

            # Stop existing containers
            docker-compose down || true

            # Start new containers with latest image
            docker-compose up -d

            # Clean up old images
            docker image prune -f

            # Show running containers
            docker ps

            # Show application logs (last 20 lines)
            docker-compose logs --tail=20

            echo "âœ… Deployment completed successfully!"
